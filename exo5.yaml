openapi: 3.0.3
info:
  title: API Shop
  version: 1.0.0

servers:
  - url: http://localhost:8080/api

paths:
  /products:
    get:
      summary: Liste des produits
      tags:
        - Products
      responses:
        '200':
          description: Liste des produits
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              examples:
                success:
                  summary: Exemple de réponse
                  value:
                    - id: 1
                      name: Laptop
                      price: 1200.50
                    - id: 2
                      name: Smartphone
                      price: 750.00

  /orders:
    get:
      summary: Liste paginée des commandes
      tags:
        - Orders
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
      responses:
        '200':
          description: Liste paginée des commandes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
              examples:
                success:
                  summary: Exemple de réponse
                  value:
                    - identifier: 101
                      customer_name: Alice Dupont
                      creation_datetime: 2025-09-01T10:15:00Z
                      total_amount: 220.75
                    - identifier: 102
                      customer_name: Bob Martin
                      creation_datetime: 2025-09-02T09:30:00Z
                      total_amount: 149.99

    post:
      summary: Créer une commande
      tags:
        - Orders
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
            examples:
              creation:
                summary: Exemple de création
                value:
                  customer_name: John Doe
                  creation_datetime: 2025-09-02T11:00:00Z
                  total_amount: 399.90
      responses:
        '201':
          description: Commande créée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              examples:
                created:
                  summary: Exemple de commande créée
                  value:
                    identifier: 103
                    customer_name: John Doe
                    creation_datetime: 2025-09-02T11:00:00Z
                    total_amount: 399.90

components:
  parameters:
    page:
      name: page
      in: query
      description: Numéro de la page (commence à 0)
      required: false
      schema:
        type: integer
        default: 0
    size:
      name: size
      in: query
      description: Nombre d’éléments par page
      required: false
      schema:
        type: integer
        default: 20

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
          format: float
      required: [id, name, price]

    Order:
      type: object
      properties:
        identifier:
          type: integer
        customer_name:
          type: string
        creation_datetime:
          type: string
          format: date-time
        total_amount:
          type: number
          format: float
      required: [customer_name, creation_datetime, total_amount]
